
javafx playlist im learning gui from basics:
https://www.youtube.com/watch?v=FLkOX4Eez6o
https://www.youtube.com/watch?v=S_JN7zO12H4
https://www.youtube.com/watch?v=QGGE0WsUslc
https://www.youtube.com/watch?v=7LxWQIDOzyE
https://www.youtube.com/watch?v=SpL3EToqaXA
https://www.youtube.com/watch?v=HFAsMWkiLvg
https://www.youtube.com/watch?v=ZuHcl5MmRck
https://www.youtube.com/watch?v=WJ16Mz_rHGE
https://www.youtube.com/watch?v=cwJK_WpseKQ
https://www.youtube.com/watch?v=JWxnoe6APUY
https://www.youtube.com/watch?v=K3CenJ2bMok
https://www.youtube.com/watch?v=WZGyP57IH6M
https://www.youtube.com/watch?v=Bg5VcIL2IhY
https://www.youtube.com/watch?v=GbzKr46VvD0
treeview (can be used for our program):
https://www.youtube.com/watch?v=SvmSNbXQSnQ
tableview - with auto spreedsheet like javafx sorting based on filter and drag column ahead feature (even better since loads of data have) 
https://youtu.be/sYga9AxY72M?si=5rv0sdSmOuZhWzUN
https://youtu.be/mtdlX2NMy4M?si=RH1RnoSidwosFmii
https://www.youtube.com/watch?v=q1LEN2assfU
https://www.youtube.com/watch?v=uz2sWCnTq6E&list=PL6gx4Cwl9DGBzfXLWLSYVy8EbTdpGbUIG&index=20
menus(checked + radio menu item):
https://youtu.be/JBJ9MIEfU3k?si=KmHXUpTj5GhnZlwW
https://www.youtube.com/watch?v=AP4e6Lxncp4&list=PL6gx4Cwl9DGBzfXLWLSYVy8EbTdpGbUIG&index=22
https://www.youtube.com/watch?v=qZNqREHSrC0&list=PL6gx4Cwl9DGBzfXLWLSYVy8EbTdpGbUIG&index=23
https://www.youtube.com/watch?v=VB_YnRteVAM&list=PL6gx4Cwl9DGBzfXLWLSYVy8EbTdpGbUIG&index=24
properties+binding:
https://youtu.be/BY-4ONH0DFE?si=wJ2RyhZQAEg3Ebll
https://www.youtube.com/watch?v=s8GomyEOA8w&list=PL6gx4Cwl9DGBzfXLWLSYVy8EbTdpGbUIG&index=29

Key JavaFX-Specific Enhancements
Reactive UI Architecture:

JavaFX properties (SimpleDoubleProperty, ObservableList) enable automatic UI updates when model data changes (e.g., wear percentage updates trigger real-time dashboard refresh).

Example: DashboardPane binds wearColumn to IndustrialItem.wearPercentage for zero-glue synchronization.

Advanced Visualization:

WarehouseCanvas uses JavaFX Canvas and GraphicsContext for high-performance 2D rendering of industrial components, forklifts, and hazard effects (e.g., chemical leaks visualized as animated red circles).

Time Simulation:

TimeManager replaces Swing Timer with JavaFX Timeline, supporting:

Real-time mode: Timeline with KeyFrame advancing time hourly.

Manual jumps: Programmatic time increments via incrementTime(hours).

Exception Handling UX:

SafetyViolationException triggers JavaFX Alert dialogs with detailed error messages and visual cues (e.g., flashing items in WarehouseCanvas).

Modern Reporting:

Compliance reports export via JavaFX FileChooser; TableView displays live OSHA audit data with CSS styling.

Why JavaFX Enhances the Proposal
Performance: Canvas rendering handles 1000+ items efficiently vs. Swingâ€™s overhead.

Maintainability: FXML support (optional) separates UI design from business logic.

User Experience: CSS styling, animations, and property binding create a polished training simulator.

Industry Alignment: Mirrors modern industrial SCADA systems using reactive architectures.

(All academic and safety goals remain unchanged from original proposal.)








